"""initial_database_clean

Revision ID: 85c4b1458e99
Revises: 
Create Date: 2025-10-09 07:45:20.814963

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '85c4b1458e99'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('course_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('credits', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('course_id'),
    sa.UniqueConstraint('course_code')
    )
    op.create_table('periods',
    sa.Column('period_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('period_number', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('day', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('period_id')
    )
    op.create_table('programs',
    sa.Column('program_id', sa.Integer(), nullable=False),
    sa.Column('program_name', sa.String(length=150), nullable=False),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('start_year', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('current_semester', sa.String(length=10), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('program_id')
    )
    op.create_index(op.f('ix_programs_program_id'), 'programs', ['program_id'], unique=False)
    op.create_table('rooms',
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('room_name', sa.String(length=50), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('camera_stream_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('room_id')
    )
    op.create_index(op.f('ix_rooms_room_id'), 'rooms', ['room_id'], unique=False)
    op.create_table('semesters',
    sa.Column('semester_id', sa.Integer(), nullable=False),
    sa.Column('semester_name', sa.String(length=50), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('semester_id'),
    sa.UniqueConstraint('semester_name')
    )
    op.create_index(op.f('ix_semesters_semester_id'), 'semesters', ['semester_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=150), nullable=True),
    sa.Column('password', sa.String(length=512), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('program_courses',
    sa.Column('program_course_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('program_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('semester_no', sa.String(length=10), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['program_id'], ['programs.program_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('program_course_id'),
    sa.UniqueConstraint('program_id', 'course_id', 'semester_no', name='uq_program_course_semester')
    )
    op.create_table('students',
    sa.Column('student_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_code', sa.String(length=20), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('class', sa.String(length=50), nullable=True),
    sa.Column('training_program', sa.String(length=50), nullable=True),
    sa.Column('course_years', sa.String(length=20), nullable=True),
    sa.Column('education_type', sa.String(length=50), nullable=True),
    sa.Column('faculty', sa.String(length=100), nullable=True),
    sa.Column('major', sa.String(length=100), nullable=True),
    sa.Column('position', sa.String(length=50), nullable=True),
    sa.Column('avatar', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("education_type IN ('Đại học chính quy', 'Liên thông', 'Cao đẳng')", name='check_education_type'),
    sa.CheckConstraint("gender IN ('Nam', 'Nữ', 'Khác')", name='check_gender'),
    sa.CheckConstraint("status IN ('Đang học', 'Bảo lưu', 'Đã tốt nghiệp')", name='check_status'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('student_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('student_code')
    )
    op.create_table('teachers',
    sa.Column('teacher_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('teacher_code', sa.String(length=20), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('faculty', sa.String(length=100), nullable=True),
    sa.Column('specialization', sa.String(length=100), nullable=True),
    sa.Column('degree', sa.String(length=50), nullable=True),
    sa.Column('academic_rank', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('teacher_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('teacher_code')
    )
    op.create_table('course_classes',
    sa.Column('course_class_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('teacher_id', sa.Integer(), nullable=False),
    sa.Column('section', sa.String(length=20), nullable=True),
    sa.Column('max_students', sa.Integer(), nullable=True),
    sa.Column('min_students', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.course_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teachers.teacher_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('course_class_id')
    )
    op.create_table('student_faces',
    sa.Column('face_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('embedding_vector', sa.LargeBinary(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('faiss_index', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('face_id')
    )
    op.create_index(op.f('ix_student_faces_face_id'), 'student_faces', ['face_id'], unique=False)
    op.create_index(op.f('ix_student_faces_student_id'), 'student_faces', ['student_id'], unique=False)
    op.create_table('enrollments',
    sa.Column('enrollment_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('course_class_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['course_class_id'], ['course_classes.course_class_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['students.student_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('enrollment_id')
    )
    op.create_index(op.f('ix_enrollments_enrollment_id'), 'enrollments', ['enrollment_id'], unique=False)
    op.create_table('schedule_templates',
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('course_class_id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('period_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['course_class_id'], ['course_classes.course_class_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['period_id'], ['periods.period_id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.room_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('template_id')
    )
    op.create_index(op.f('ix_schedule_templates_template_id'), 'schedule_templates', ['template_id'], unique=False)
    op.create_table('schedules',
    sa.Column('schedule_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_class_id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('period_start', sa.Integer(), nullable=False),
    sa.Column('period_end', sa.Integer(), nullable=False),
    sa.Column('week_number', sa.Integer(), nullable=True),
    sa.Column('specific_date', sa.Date(), nullable=True),
    sa.Column('semester_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('day_of_week BETWEEN 1 AND 7', name='check_day_of_week'),
    sa.CheckConstraint('week_number BETWEEN 1 AND 20', name='check_week_number'),
    sa.ForeignKeyConstraint(['course_class_id'], ['course_classes.course_class_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['period_end'], ['periods.period_id'], ),
    sa.ForeignKeyConstraint(['period_start'], ['periods.period_id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['rooms.room_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['semester_id'], ['semesters.semester_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('schedule_id'),
    sa.UniqueConstraint('course_class_id', 'day_of_week', 'period_start', 'period_end', 'week_number', name='unique_schedule_week')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('schedules')
    op.drop_index(op.f('ix_schedule_templates_template_id'), table_name='schedule_templates')
    op.drop_table('schedule_templates')
    op.drop_index(op.f('ix_enrollments_enrollment_id'), table_name='enrollments')
    op.drop_table('enrollments')
    op.drop_index(op.f('ix_student_faces_student_id'), table_name='student_faces')
    op.drop_index(op.f('ix_student_faces_face_id'), table_name='student_faces')
    op.drop_table('student_faces')
    op.drop_table('course_classes')
    op.drop_table('teachers')
    op.drop_table('students')
    op.drop_table('program_courses')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_semesters_semester_id'), table_name='semesters')
    op.drop_table('semesters')
    op.drop_index(op.f('ix_rooms_room_id'), table_name='rooms')
    op.drop_table('rooms')
    op.drop_index(op.f('ix_programs_program_id'), table_name='programs')
    op.drop_table('programs')
    op.drop_table('periods')
    op.drop_table('courses')
    # ### end Alembic commands ###
